// <auto-generated />
using System;
using LoveAlgorithm.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace LoveAlgorithm.Migrations
{
    [DbContext(typeof(LoveAlgorithmContext))]
    partial class LoveAlgorithmContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.13")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("LoveAlgorithm.Models.Chat", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int?>("Korisnik1ID")
                        .HasColumnType("int");

                    b.Property<int?>("Korisnik2ID")
                        .HasColumnType("int");

                    b.Property<bool>("PotvrdaAdministratora")
                        .HasColumnType("tinyint(1)");

                    b.HasKey("ID");

                    b.HasIndex("Korisnik1ID");

                    b.HasIndex("Korisnik2ID");

                    b.ToTable("Chat");
                });

            modelBuilder.Entity("LoveAlgorithm.Models.Pitanja", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("Odgovor")
                        .HasColumnType("int");

                    b.Property<string>("Pitanje")
                        .HasColumnType("text");

                    b.HasKey("ID");

                    b.ToTable("Pitanja");
                });

            modelBuilder.Entity("LoveAlgorithm.Models.Poruka", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("PorukaTxt")
                        .HasColumnType("text");

                    b.Property<int?>("PosiljalacID")
                        .HasColumnType("int");

                    b.Property<int?>("PrimalacID")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("PosiljalacID");

                    b.HasIndex("PrimalacID");

                    b.ToTable("Poruka");
                });

            modelBuilder.Entity("LoveAlgorithm.Models.Recenzije", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Komentar")
                        .HasColumnType("text");

                    b.Property<int?>("Korisnik1ID")
                        .HasColumnType("int");

                    b.Property<double>("Ocjena")
                        .HasColumnType("double");

                    b.HasKey("ID");

                    b.HasIndex("Korisnik1ID");

                    b.ToTable("Recenzije");
                });

            modelBuilder.Entity("LoveAlgorithm.Models.RegistrovaniKorisnik", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("DatumRodjenja")
                        .HasColumnType("datetime");

                    b.Property<string>("Drzava")
                        .HasColumnType("text");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Grad")
                        .HasColumnType("text");

                    b.Property<string>("Ime")
                        .HasColumnType("text");

                    b.Property<string>("KorisnickiPodaci")
                        .HasColumnType("text");

                    b.Property<string>("KorisnickoIme")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Lozinka")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Opis")
                        .HasColumnType("text");

                    b.Property<int>("Pol")
                        .HasColumnType("int");

                    b.Property<string>("Prezime")
                        .HasColumnType("text");

                    b.HasKey("ID");

                    b.ToTable("RegistrovaniKorisnik");
                });

            modelBuilder.Entity("LoveAlgorithm.Models.Chat", b =>
                {
                    b.HasOne("LoveAlgorithm.Models.RegistrovaniKorisnik", "Korisnik1")
                        .WithMany()
                        .HasForeignKey("Korisnik1ID");

                    b.HasOne("LoveAlgorithm.Models.RegistrovaniKorisnik", "Korisnik2")
                        .WithMany()
                        .HasForeignKey("Korisnik2ID");
                });

            modelBuilder.Entity("LoveAlgorithm.Models.Poruka", b =>
                {
                    b.HasOne("LoveAlgorithm.Models.RegistrovaniKorisnik", "Posiljalac")
                        .WithMany()
                        .HasForeignKey("PosiljalacID");

                    b.HasOne("LoveAlgorithm.Models.RegistrovaniKorisnik", "Primalac")
                        .WithMany()
                        .HasForeignKey("PrimalacID");
                });

            modelBuilder.Entity("LoveAlgorithm.Models.Recenzije", b =>
                {
                    b.HasOne("LoveAlgorithm.Models.RegistrovaniKorisnik", "Korisnik1")
                        .WithMany()
                        .HasForeignKey("Korisnik1ID");
                });
#pragma warning restore 612, 618
        }
    }
}
